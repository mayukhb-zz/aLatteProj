<?xml version="1.0" encoding="UTF-8"?>
<archive type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="8.00">
	<data>
		<int key="IBDocument.SystemTarget">1296</int>
		<string key="IBDocument.SystemVersion">11D50</string>
		<string key="IBDocument.InterfaceBuilderVersion">2182</string>
		<string key="IBDocument.AppKitVersion">1138.32</string>
		<string key="IBDocument.HIToolboxVersion">568.00</string>
		<object class="NSMutableDictionary" key="IBDocument.PluginVersions">
			<string key="NS.key.0">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
			<string key="NS.object.0">1181</string>
		</object>
		<array key="IBDocument.IntegratedClassDependencies">
			<string>IBUITextView</string>
			<string>IBUIView</string>
			<string>IBUIScrollView</string>
			<string>IBProxyObject</string>
		</array>
		<array key="IBDocument.PluginDependencies">
			<string>com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
		</array>
		<object class="NSMutableDictionary" key="IBDocument.Metadata">
			<string key="NS.key.0">PluginDependencyRecalculationVersion</string>
			<integer value="1" key="NS.object.0"/>
		</object>
		<array class="NSMutableArray" key="IBDocument.RootObjects" id="1000">
			<object class="IBProxyObject" id="372490531">
				<string key="IBProxiedObjectIdentifier">IBFilesOwner</string>
				<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
			</object>
			<object class="IBProxyObject" id="975951072">
				<string key="IBProxiedObjectIdentifier">IBFirstResponder</string>
				<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
			</object>
			<object class="IBUIView" id="191373211">
				<reference key="NSNextResponder"/>
				<int key="NSvFlags">274</int>
				<array class="NSMutableArray" key="NSSubviews">
					<object class="IBUIScrollView" id="179134965">
						<reference key="NSNextResponder" ref="191373211"/>
						<int key="NSvFlags">274</int>
						<array class="NSMutableArray" key="NSSubviews">
							<object class="IBUITextView" id="887291499">
								<reference key="NSNextResponder" ref="179134965"/>
								<int key="NSvFlags">292</int>
								<string key="NSFrameSize">{321, 460}</string>
								<reference key="NSSuperview" ref="179134965"/>
								<reference key="NSWindow"/>
								<reference key="NSNextKeyView"/>
								<string key="NSReuseIdentifierKey">_NS:9</string>
								<object class="NSColor" key="IBUIBackgroundColor">
									<int key="NSColorSpace">1</int>
									<bytes key="NSRGB">MSAxIDEAA</bytes>
								</object>
								<bool key="IBUIClipsSubviews">YES</bool>
								<bool key="IBUIMultipleTouchEnabled">YES</bool>
								<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
								<bool key="IBUIEditable">NO</bool>
								<object class="NSMutableString" key="IBUIText">
									<bytes key="NS.bytes">YUxhdHRlIChvciAid2UiKSBvcGVyYXRlcyBhTGF0dGVhcHAuY29tLCB3aGljaCBpcyBhbiBvbmxpbmUg
c2VydmljZSB0aGF0IGFsbG93cyBNZW1iZXJzIHRvIGNyZWF0ZSB1bmlxdWUgcGVyc29uYWwgcHJvZmls
ZXMgb25saW5lIGluIG9yZGVyIHRvIGZpbmQgYW5kIGNvbW11bmljYXRlIHdpdGggbmV3IGZyaWVuZHMu
IFRoZSBzZXJ2aWNlcyBvZmZlcmVkIGJ5IGFMYXR0ZSBpbmNsdWRlIGFueSBhTGF0dGUtYnJhbmRlZCBV
UkwgKHRoZSAiYUxhdHRlIFdlYnNpdGUiKSwgdGhlIGFMYXR0ZSBpbnN0YW50IG1lc3NhZ2luZyBzZXJ2
aWNlLCB0aGUgYUxhdHRlIGlQaG9uZS9pcG9kL2lwb2QgdG91Y2ggYXBwbGljYXRpb25zLCBhTGF0dGUg
bW9iaWxlIHNlcnZpY2VzLCBhbmQgYW55IG90aGVyIGZlYXR1cmVzLCBjb250ZW50LCBvciBhcHBsaWNh
dGlvbnMgb2ZmZXJlZCBmcm9tIHRpbWUgdG8gdGltZSBieSBhTGF0dGUgaW4gY29ubmVjdGlvbiB3aXRo
IGFMYXR0ZSdzIGJ1c2luZXNzIChjb2xsZWN0aXZlbHksIHRoZSAiYUxhdHRlIFNlcnZpY2VzIikuIA0K
DQpUaGlzIFRlcm1zIG9mIFVzZSBBZ3JlZW1lbnQgKCJBZ3JlZW1lbnQiKSBzZXRzIGZvcnRoIHRoZSBs
ZWdhbGx5IGJpbmRpbmcgdGVybXMgZm9yIHlvdXIgdXNlIG9mIHRoZSBhTGF0dGUgU2VydmljZXMuIEJ5
IHVzaW5nIHRoZSBhTGF0dGUgU2VydmljZXMsIHlvdSBhZ3JlZSB0byBiZSBib3VuZCBieSB0aGlzIEFn
cmVlbWVudCwgd2hldGhlciB5b3UgYXJlIGEgIlZpc2l0b3IiICh3aGljaCBtZWFucyB0aGF0IHlvdSBz
aW1wbHkgYnJvd3NlIHRoZSBhTGF0dGUgV2Vic2l0ZSwgaW5jbHVkaW5nIHRocm91Z2ggYSBtb2JpbGUg
ZGV2aWNlLCBvciBvdGhlcndpc2UgdXNlIHRoZSBhTGF0dGUgU2VydmljZXMgd2l0aG91dCBiZWluZyBy
ZWdpc3RlcmVkKSBvciB5b3UgYXJlIGEgIk1lbWJlciIgKHdoaWNoIG1lYW5zIHRoYXQgeW91IGhhdmUg
cmVnaXN0ZXJlZCB3aXRoIGFMYXR0ZSkuIFRoZSB0ZXJtICJVc2VyIiByZWZlcnMgdG8gYSBWaXNpdG9y
IG9yIGEgTWVtYmVyLiBZb3UgYXJlIG9ubHkgYXV0aG9yaXplZCB0byB1c2UgdGhlIGFMYXR0ZSBTZXJ2
aWNlcyAocmVnYXJkbGVzcyBvZiB3aGV0aGVyIHlvdXIgYWNjZXNzIG9yIHVzZSBpcyBpbnRlbmRlZCkg
aWYgeW91IGFncmVlIHRvIGFiaWRlIGJ5IGFsbCBhcHBsaWNhYmxlIGxhd3MgYW5kIHRoZSB0ZXJtcyBv
ZiB0aGlzIEFncmVlbWVudC4gUGxlYXNlIHJlYWQgdGhpcyBBZ3JlZW1lbnQgYW5kIHNhdmUgaXQuIElm
IHlvdSBkbyBub3QgYWdyZWUgdG8gYmUgYm91bmQgYnkgdGhpcyBBZ3JlZW1lbnQsIGFuZCBhcmUgdW53
aWxsaW5nIGZvbGxvdyBhbGwgYXBwbGljYWJsZSBsYXdzLCB5b3Ugc2hvdWxkIGxlYXZlIHRoZSBhTGF0
dGUgV2Vic2l0ZSBhbmQgZGlzY29udGludWUgdXNlIG9mIHRoZSBhTGF0dGUgU2VydmljZXMgaW1tZWRp
YXRlbHkuIElmIHlvdSB3aXNoIHRvIGJlY29tZSBhIE1lbWJlciwgY29tbXVuaWNhdGUgd2l0aCBvdGhl
ciBNZW1iZXJzIGFuZC9vciBtYWtlIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzLCB5b3UgbXVzdCBy
ZWFkIHRoaXMgQWdyZWVtZW50IGFuZCBpbmRpY2F0ZSB5b3VyIGFjY2VwdGFuY2UgZHVyaW5nIHRoZSBy
ZWdpc3RyYXRpb24gcHJvY2Vzcy4NCg0KVGhpcyBBZ3JlZW1lbnQgaW5jbHVkZXMgYUxhdHRlJ3MgcG9s
aWN5IGZvciBhY2NlcHRhYmxlIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzIGFuZCBDb250ZW50IChh
cyBkZWZpbmVkIGluIFNlY3Rpb24gNi4xIGJlbG93KSBwb3N0ZWQgb24gb3IgdGhyb3VnaCB0aGUgYUxh
dHRlIFNlcnZpY2VzIGFuZCB5b3VyIHJpZ2h0cywgb2JsaWdhdGlvbnMgYW5kIHJlc3RyaWN0aW9ucyBy
ZWdhcmRpbmcgeW91ciB1c2Ugb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhbmQgQ29udGVudCBwb3N0ZWQg
b24gb3IgdGhyb3VnaCB0aGUgYUxhdHRlIFNlcnZpY2VzLiBJbiBvcmRlciB0byBwYXJ0aWNpcGF0ZSBp
biBjZXJ0YWluIGFMYXR0ZSBTZXJ2aWNlcywgeW91IG1heSBiZSBub3RpZmllZCB0aGF0IHlvdSBhcmUg
cmVxdWlyZWQgdG8gZG93bmxvYWQgc29mdHdhcmUgb3IgY29udGVudCBhbmQvb3IgYWdyZWUgdG8gYWRk
aXRpb25hbCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBmcm9tIGFMYXR0ZS4gVW5sZXNzIG90aGVyd2lzZSBw
cm92aWRlZCBieSB0aGUgYWRkaXRpb25hbCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBhcHBsaWNhYmxlIHRv
IHRoZSBhTGF0dGUgU2VydmljZXMgaW4gd2hpY2ggeW91IGNob29zZSB0byBwYXJ0aWNpcGF0ZSwgdGhv
c2UgYWRkaXRpb25hbCB0ZXJtcyBhcmUgaGVyZWJ5IGluY29ycG9yYXRlZCBpbnRvIHRoaXMgQWdyZWVt
ZW50LiBZb3UgbWF5IHJlY2VpdmUgYSBjb3B5IG9mIHRoaXMgQWdyZWVtZW50IGJ5IGVtYWlsaW5nIHVz
IGF0OiBzdXBwb3J0QGFsYXR0ZWFwcC5jb20sIFN1YmplY3Q6IFRlcm1zIG9mIFVzZSBBZ3JlZW1lbnQu
DQoNCmFMYXR0ZSBtYXkgbW9kaWZ5IHRoaXMgQWdyZWVtZW50IGZyb20gdGltZSB0byB0aW1lIGFuZCBz
dWNoIG1vZGlmaWNhdGlvbiBzaGFsbCBiZSBlZmZlY3RpdmUgdXBvbiBwb3N0aW5nIGJ5IGFMYXR0ZSBv
biB0aGUgYUxhdHRlIFdlYnNpdGUuIFlvdXIgY29udGludWVkIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZp
Y2VzIGFmdGVyIGFMYXR0ZSBwb3N0cyBhIHJldmlzZWQgQWdyZWVtZW50IHNpZ25pZmllcyB5b3VyIGFj
Y2VwdGFuY2Ugb2YgdGhlIHJldmlzZWQgQWdyZWVtZW50LiBJdCBpcyB0aGVyZWZvcmUgaW1wb3J0YW50
IHRoYXQgeW91IHJldmlldyB0aGlzIEFncmVlbWVudCByZWd1bGFybHkgdG8gZW5zdXJlIHlvdSBhcmUg
dXBkYXRlZCBhcyB0byBhbnkgY2hhbmdlcy4NCg0KUGxlYXNlIGNob29zZSBjYXJlZnVsbHkgdGhlIGlu
Zm9ybWF0aW9uIHlvdSBwb3N0IG9uIG9yIHRocm91Z2ggdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhbmQgdGhh
dCB5b3UgcHJvdmlkZSB0byBvdGhlciBVc2Vycy4gWW91ciBhTGF0dGUgcHJvZmlsZSBtYXkgbm90IGlu
Y2x1ZGUgYW55IGZvcm0gb2YgUHJvaGliaXRlZCBDb250ZW50LCBhcyBvdXRsaW5lZCBpbiBTZWN0aW9u
IDggYmVsb3cuIERlc3BpdGUgdGhpcyBwcm9oaWJpdGlvbiwgaW5mb3JtYXRpb24sIG1hdGVyaWFscywg
cHJvZHVjdHMgb3Igc2VydmljZXMgcHJvdmlkZWQgYnkgb3RoZXIgYUxhdHRlIE1lbWJlcnMgKGZvciBp
bnN0YW5jZSwgaW4gdGhlaXIgcHJvZmlsZSkgbWF5LCBpbiB3aG9sZSBvciBpbiBwYXJ0LCBiZSB1bmF1
dGhvcml6ZWQsIGltcGVybWlzc2libGUgb3Igb3RoZXJ3aXNlIHZpb2xhdGUgdGhpcyBBZ3JlZW1lbnQs
IGFuZCBhTGF0dGUgYXNzdW1lcyBubyByZXNwb25zaWJpbGl0eSBvciBsaWFiaWxpdHkgZm9yIHRoaXMg
bWF0ZXJpYWwuIElmIHlvdSBiZWNvbWUgYXdhcmUgb2YgbWlzdXNlIG9mIHRoZSBhTGF0dGUgU2Vydmlj
ZXMgYnkgYW55IHBlcnNvbiwgcGxlYXNlIG5vdGlmeSBhTGF0dGUgYnkgc2VuZGluZyBhbiBlLW1haWwg
dG8gc3VwcG9ydEBhbGF0dGVhcHAuY29tLg0KDQphTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0LCBpbiBp
dHMgc29sZSBkaXNjcmV0aW9uLCB0byByZWplY3QsIHJlZnVzZSB0byBwb3N0IG9yIHJlbW92ZSBhbnkg
cG9zdGluZyAoaW5jbHVkaW5nIHByaXZhdGUgbWVzc2FnZXMpIGJ5IHlvdSwgb3IgdG8gZGVueSwgcmVz
dHJpY3QsIHN1c3BlbmQsIG9yIHRlcm1pbmF0ZSB5b3VyIGFjY2VzcyB0byBhbGwgb3IgYW55IHBhcnQg
b2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhdCBhbnkgdGltZSwgZm9yIGFueSBvciBubyByZWFzb24sIHdp
dGggb3Igd2l0aG91dCBwcmlvciBub3RpY2Ugb3IgZXhwbGFuYXRpb24sIGFuZCB3aXRob3V0IGxpYWJp
bGl0eS4gYUxhdHRlIGV4cHJlc3NseSByZXNlcnZlcyB0aGUgcmlnaHQgdG8gcmVtb3ZlIHlvdXIgcHJv
ZmlsZSBhbmQvb3IgZGVueSwgcmVzdHJpY3QsIHN1c3BlbmQsIG9yIHRlcm1pbmF0ZSB5b3VyIGFjY2Vz
cyB0byBhbGwgb3IgYW55IHBhcnQgb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBpZiBhTGF0dGUgZGV0ZXJt
aW5lcywgaW4gaXRzIHNvbGUgZGlzY3JldGlvbiwgdGhhdCB5b3UgaGF2ZSB2aW9sYXRlZCB0aGlzIEFn
cmVlbWVudCBvciBwb3NlIGEgdGhyZWF0IHRvIGFMYXR0ZSBhbmQvb3IgaXRzIFVzZXJzLg0KDQogICAg
MS4gRWxpZ2liaWxpdHkuIFVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzIGFuZCByZWdpc3RyYXRpb24g
dG8gYmUgYSBNZW1iZXIgZm9yIHRoZSBhTGF0dGUgU2VydmljZXMgKCJNZW1iZXJzaGlwIikgaXMgdm9p
ZCB3aGVyZSBwcm9oaWJpdGVkLiBCeSB1c2luZyB0aGUgYUxhdHRlIFNlcnZpY2VzLCB5b3UgcmVwcmVz
ZW50IGFuZCB3YXJyYW50IHRoYXQgKGEpIGFsbCByZWdpc3RyYXRpb24gaW5mb3JtYXRpb24geW91IHN1
Ym1pdCBpcyB0cnV0aGZ1bCBhbmQgYWNjdXJhdGU7IChiKSB5b3Ugd2lsbCBtYWludGFpbiB0aGUgYWNj
dXJhY3kgb2Ygc3VjaCBpbmZvcm1hdGlvbjsNCg0KICAgIDIuIFRlcm0uIFRoaXMgQWdyZWVtZW50LCBh
bmQgYW55IHBvc3RlZCByZXZpc2lvbiB0byB0aGlzIEFncmVlbWVudCwgc2hhbGwgcmVtYWluIGluIGZ1
bGwgZm9yY2UgYW5kIGVmZmVjdCB3aGlsZSB5b3UgdXNlIHRoZSBhTGF0dGUgU2VydmljZXMgb3IgYXJl
IGEgTWVtYmVyLiBZb3UgbWF5IHRlcm1pbmF0ZSB5b3VyIE1lbWJlcnNoaXAgYXQgYW55IHRpbWUsIGZv
ciBhbnkgcmVhc29uIGJ5IGUtbWFpbGluZyBzdXBwb3J0QGFsYXR0ZWFwcC5jb20uIGFMYXR0ZSBtYXkg
dGVybWluYXRlIHlvdXIgTWVtYmVyc2hpcCBhdCBhbnkgdGltZSwgZm9yIGFueSBvciBubyByZWFzb24s
IHdpdGggb3Igd2l0aG91dCBwcmlvciBub3RpY2Ugb3IgZXhwbGFuYXRpb24sIGFuZCB3aXRob3V0IGxp
YWJpbGl0eS4gRXZlbiBhZnRlciBNZW1iZXJzaGlwIGlzIHRlcm1pbmF0ZWQsIHRoaXMgQWdyZWVtZW50
IHdpbGwgcmVtYWluIGluIGVmZmVjdCwgaW5jbHVkaW5nIFNlY3Rpb25zIDUtMTcuDQoNCiAgICAzLiBG
ZWVzLiBZb3UgYWNrbm93bGVkZ2UgdGhhdCBhTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIGNoYXJn
ZSBmb3IgYW55IHBvcnRpb24gb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhbmQgdG8gY2hhbmdlIGl0cyBm
ZWVzIChpZiBhbnkpIGZyb20gdGltZSB0byB0aW1lIGluIGl0cyBkaXNjcmV0aW9uLiBJZiBhTGF0dGUg
dGVybWluYXRlcyB5b3VyIE1lbWJlcnNoaXAgYmVjYXVzZSB5b3UgaGF2ZSBicmVhY2hlZCB0aGUgQWdy
ZWVtZW50LCB5b3Ugc2hhbGwgbm90IGJlIGVudGl0bGVkIHRvIHRoZSByZWZ1bmQgb2YgYW55IHVudXNl
ZCBwb3J0aW9uIG9mIGZlZXMgb3IgcGF5bWVudHMgKGlmIGFueSkuDQoNCiAgICA0LiBQYXNzd29yZC4g
V2hlbiB5b3Ugc2lnbiB1cCB0byBiZWNvbWUgYSBNZW1iZXIsIHlvdSB3aWxsIGFsc28gYmUgYXNrZWQg
dG8gY2hvb3NlIGEgcGFzc3dvcmQuIFlvdSBhcmUgZW50aXJlbHkgcmVzcG9uc2libGUgZm9yIG1haW50
YWluaW5nIHRoZSBjb25maWRlbnRpYWxpdHkgb2YgeW91ciBwYXNzd29yZC4gWW91IGFncmVlIG5vdCB0
byB1c2UgdGhlIGFjY291bnQsIHVzZXJuYW1lLCBvciBwYXNzd29yZCBvZiBhbm90aGVyIE1lbWJlciBh
dCBhbnkgdGltZSBvciB0byBkaXNjbG9zZSB5b3VyIHBhc3N3b3JkIHRvIGFueSB0aGlyZCBwYXJ0eS4g
WW91IGFncmVlIHRvIG5vdGlmeSBhTGF0dGUgaW1tZWRpYXRlbHkgaWYgeW91IHN1c3BlY3QgYW55IHVu
YXV0aG9yaXplZCB1c2Ugb2YgeW91ciBhY2NvdW50IG9yIGFjY2VzcyB0byB5b3VyIHBhc3N3b3JkLiBZ
b3UgYXJlIHNvbGVseSByZXNwb25zaWJsZSBmb3IgYW55IGFuZCBhbGwgdXNlIG9mIHlvdXIgYWNjb3Vu
dC4NCg0KICAgIDUuIFVzZSBieSBNZW1iZXJzLiBUaGUgYUxhdHRlIFNlcnZpY2VzIGFyZSBmb3IgdGhl
IHBlcnNvbmFsIHVzZSBvZiBNZW1iZXJzIGFuZCBtYXkgYmUgdXNlZCBmb3IgcHJvbW90aW9uYWwgcHVy
cG9zZXMgYXMgd2VsbCwgYnV0IGRpcmVjdCBjb21tZXJjaWFsIGVuZGVhdm9ycyBtYXkgb25seSBiZSB1
c2VkIGlmIHRoZXkgYXJlIHNwZWNpZmljYWxseSBlbmRvcnNlZCBvciBhdXRob3JpemVkIGJ5IGFMYXR0
ZS4gYUxhdHRlIHJlc2VydmVzIHRoZSByaWdodCB0byByZW1vdmUgY29tbWVyY2lhbCBjb250ZW50IGlu
IGl0cyBzb2xlIGRpc2NyZXRpb24uIElsbGVnYWwgYW5kL29yIHVuYXV0aG9yaXplZCB1c2Ugb2YgdGhl
IGFMYXR0ZSBTZXJ2aWNlcywgaW5jbHVkaW5nIGNvbGxlY3RpbmcgdXNlcm5hbWVzLCB1c2VyIGlkIG51
bWJlcnMsIGFuZC9vciBlbWFpbCBhZGRyZXNzZXMgb2YgTWVtYmVycyBieSBlbGVjdHJvbmljIG9yIG90
aGVyIG1lYW5zIGZvciB0aGUgcHVycG9zZSBvZiBzZW5kaW5nIHVuc29saWNpdGVkIGVtYWlsIG9yIHVu
YXV0aG9yaXplZCBmcmFtaW5nIG9mIG9yIGxpbmtpbmcgdG8gdGhlIGFMYXR0ZSBXZWJzaXRlLCBvciBl
bXBsb3lpbmcgdGhpcmQgcGFydHkgcHJvbW90aW9uYWwgc2l0ZXMgb3Igc29mdHdhcmUgdG8gcHJvbW90
ZSBwcm9maWxlcyBmb3IgbW9uZXksIGlzIHByb2hpYml0ZWQuIENvbW1lcmNpYWwgYWR2ZXJ0aXNlbWVu
dHMsIGFmZmlsaWF0ZSBsaW5rcywgYW5kIG90aGVyIGZvcm1zIG9mIHVuYXV0aG9yaXplZCBzb2xpY2l0
YXRpb24gbWF5IGJlIHJlbW92ZWQgZnJvbSBNZW1iZXIgcHJvZmlsZXMgd2l0aG91dCBub3RpY2Ugb3Ig
ZXhwbGFuYXRpb24gYW5kIG1heSByZXN1bHQgaW4gdGVybWluYXRpb24gb2YgTWVtYmVyc2hpcCBwcml2
aWxlZ2VzLiBhTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIHRha2UgYXBwcm9wcmlhdGUgbGVnYWwg
YWN0aW9uIGZvciBhbnkgaWxsZWdhbCBvciB1bmF1dGhvcml6ZWQgdXNlIG9mIHRoZSBhTGF0dGUgU2Vy
dmljZXMuDQoNCiAgICA2LiBQcm9wcmlldGFyeSBSaWdodHMgaW4gQ29udGVudCBvbiBhTGF0dGUuDQoN
CiAgICAgICAgMS4gYUxhdHRlIGRvZXMgbm90IGNsYWltIGFueSBvd25lcnNoaXAgcmlnaHRzIGluIHRo
ZSB0ZXh0LCBmaWxlcywgaW1hZ2VzLCBwaG90b3MsIHZpZGVvLCBzb3VuZHMsIG11c2ljYWwgd29ya3Ms
IHdvcmtzIG9mIGF1dGhvcnNoaXAsIGFwcGxpY2F0aW9ucywgb3IgYW55IG90aGVyIG1hdGVyaWFscyAo
Y29sbGVjdGl2ZWx5LCAiQ29udGVudCIpIHRoYXQgeW91IHBvc3Qgb24gb3IgdGhyb3VnaCB0aGUgYUxh
dHRlIFNlcnZpY2VzIC4gQWZ0ZXIgcG9zdGluZyB5b3VyIENvbnRlbnQgdG8gdGhlIGFMYXR0ZSBTZXJ2
aWNlcywgeW91IGNvbnRpbnVlIHRvIHJldGFpbiBhbnkgc3VjaCByaWdodHMgdGhhdCB5b3UgbWF5IGhh
dmUgaW4geW91ciBDb250ZW50LCBzdWJqZWN0IHRvIHRoZSBsaW1pdGVkIGxpY2Vuc2UgaGVyZWluLiBC
eSBkaXNwbGF5aW5nIG9yIHB1Ymxpc2hpbmcgKCJwb3N0aW5nIikgYW55IENvbnRlbnQgb24gb3IgdGhy
b3VnaCB0aGUgYUxhdHRlIFNlcnZpY2VzLCB5b3UgaGVyZWJ5IGdyYW50IHRvIGFMYXR0ZSBhIGxpbWl0
ZWQgbGljZW5zZSB0byB1c2UsIG1vZGlmeSwgZGVsZXRlIGZyb20sIGFkZCB0bywgcHVibGljbHkgcGVy
Zm9ybSwgcHVibGljbHkgZGlzcGxheSwgcmVwcm9kdWNlLCBhbmQgZGlzdHJpYnV0ZSBzdWNoIENvbnRl
bnQgc29sZWx5IG9uIG9yIHRocm91Z2ggdGhlIGFMYXR0ZSBTZXJ2aWNlcywgaW5jbHVkaW5nIHdpdGhv
dXQgbGltaXRhdGlvbiBkaXN0cmlidXRpbmcgcGFydCBvciBhbGwgb2YgdGhlIGFMYXR0ZSBXZWJzaXRl
IGluIGFueSBtZWRpYSBmb3JtYXRzIGFuZCB0aHJvdWdoIGFueSBtZWRpYSBjaGFubmVscy4gQWZ0ZXIg
eW91IHJlbW92ZSB5b3VyIENvbnRlbnQgZnJvbSB0aGUgYUxhdHRlIFdlYnNpdGUgd2Ugd2lsbCBjZWFz
ZSBkaXN0cmlidXRpb24gYXMgc29vbiBhcyBwcmFjdGljYWJsZSwgYW5kIGF0IHN1Y2ggdGltZSB3aGVu
IGRpc3RyaWJ1dGlvbiBjZWFzZXMsIHRoZSBsaWNlbnNlIHdpbGwgdGVybWluYXRlLg0KDQogICAgICAg
IDIuIFRoZSBsaWNlbnNlIHlvdSBncmFudCB0byBhTGF0dGUgaXMgbm9uLWV4Y2x1c2l2ZSAobWVhbmlu
ZyB5b3UgYXJlIGZyZWUgdG8gbGljZW5zZSB5b3VyIENvbnRlbnQgdG8gYW55b25lIGVsc2UgaW4gYWRk
aXRpb24gdG8gYUxhdHRlKSwgZnVsbHktcGFpZCBhbmQgcm95YWx0eS1mcmVlIChtZWFuaW5nIHRoYXQg
YUxhdHRlIGlzIG5vdCByZXF1aXJlZCB0byBwYXkgeW91IGZvciB0aGUgdXNlIG9uIHRoZSBhTGF0dGUg
U2VydmljZXMgb2YgdGhlIENvbnRlbnQgdGhhdCB5b3UgcG9zdCksIHN1YmxpY2Vuc2FibGUgKHNvIHRo
YXQgYUxhdHRlIGlzIGFibGUgdG8gdXNlIGl0cyBhZmZpbGlhdGVzLCBzdWJjb250cmFjdG9ycyBhbmQg
b3RoZXIgcGFydG5lcnMgc3VjaCBhcyBJbnRlcm5ldCBjb250ZW50IGRlbGl2ZXJ5IG5ldHdvcmtzIGFu
ZCB3aXJlbGVzcyBjYXJyaWVycyB0byBwcm92aWRlIHRoZSBhTGF0dGUgU2VydmljZXMpLCBhbmQgd29y
bGR3aWRlIChiZWNhdXNlIHRoZSBJbnRlcm5ldCBhbmQgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhcmUgZ2xv
YmFsIGluIHJlYWNoKS4NCg0KICAgICAgICAzLiBZb3UgcmVwcmVzZW50IGFuZCB3YXJyYW50IHRoYXQ6
IChpKSB5b3Ugb3duIHRoZSBDb250ZW50IHBvc3RlZCBieSB5b3Ugb24gb3IgdGhyb3VnaCB0aGUgYUxh
dHRlIFNlcnZpY2VzIG9yIG90aGVyd2lzZSBoYXZlIHRoZSByaWdodCB0byBncmFudCB0aGUgbGljZW5z
ZSBzZXQgZm9ydGggaW4gdGhpcyBTZWN0aW9uIDYsIGFuZCAoaWkpIHRoZSBwb3N0aW5nIG9mIHlvdXIg
Q29udGVudCBvbiBvciB0aHJvdWdoIHRoZSBhTGF0dGUgU2VydmljZXMgZG9lcyBub3QgdmlvbGF0ZSB0
aGUgcHJpdmFjeSByaWdodHMsIFRlcm1zIG9mIFNlcnZpY2UsIHB1YmxpY2l0eSByaWdodHMsIGNvcHly
aWdodHMsIGNvbnRyYWN0IHJpZ2h0cyBvciBhbnkgb3RoZXIgcmlnaHRzIG9mIGFueSBwZXJzb24gb3Ig
ZW50aXR5LiBJbiB0aGUgaW5zdGFuY2Ugb2YgYSBUZXJtcyBvZiBTZXJ2aWNlIHZpb2xhdGlvbiwgeW91
IGFncmVlIHRvIHJlbGlucXVpc2ggYWxsIHJpZ2h0cyB0byBhbnkgQ29udGVudCB5b3UgaGF2ZSBwb3N0
ZWQ7IGFMYXR0ZSB0aGVuIGJlY29tZXMgdGhlIHNvbGUgb3duZXIgb2YgeW91ciBDb250ZW50LiBZb3Ug
YWdyZWUgdG8gcGF5IGZvciBhbGwgcm95YWx0aWVzLCBmZWVzLCBhbmQgYW55IG90aGVyIG1vbmllcyBv
d2luZyBhbnkgcGVyc29uIG9yIGVudGl0eSBieSByZWFzb24gb2YgYW55IENvbnRlbnQgcG9zdGVkIGJ5
IHlvdSBvbiBvciB0aHJvdWdoIHRoZSBhTGF0dGUgU2VydmljZXMuDQoNCiAgICAgICAgNC4gVGhlIGFM
YXR0ZSBTZXJ2aWNlcyBjb250YWluIENvbnRlbnQgb2YgYUxhdHRlICgiYUxhdHRlIENvbnRlbnQiKS4g
YUxhdHRlIENvbnRlbnQgaXMgcHJvdGVjdGVkIGJ5IGNvcHlyaWdodCwgdHJhZGVtYXJrLCBwYXRlbnQs
IHRyYWRlIHNlY3JldCBhbmQgb3RoZXIgbGF3cywgYW5kIGFMYXR0ZSBvd25zIGFuZCByZXRhaW5zIGFs
bCByaWdodHMgaW4gdGhlIGFMYXR0ZSBDb250ZW50IGFuZCB0aGUgYUxhdHRlIFNlcnZpY2VzLiBhTGF0
dGUgaGVyZWJ5IGdyYW50cyB5b3UgYSBsaW1pdGVkLCByZXZvY2FibGUsIG5vbnN1YmxpY2Vuc2FibGUg
bGljZW5zZSB0byByZXByb2R1Y2UgYW5kIGRpc3BsYXkgdGhlIGFMYXR0ZSBDb250ZW50IChleGNsdWRp
bmcgYW55IHNvZnR3YXJlIGNvZGUpIHNvbGVseSBmb3IgeW91ciBwZXJzb25hbCB1c2UgaW4gY29ubmVj
dGlvbiB3aXRoIHZpZXdpbmcgdGhlIGFMYXR0ZSBXZWJzaXRlIGFuZCB1c2luZyB0aGUgYUxhdHRlIFNl
cnZpY2VzLg0KDQogICAgICAgIDUuIFRoZSBhTGF0dGUgU2VydmljZXMgY29udGFpbiBDb250ZW50IG9m
IFVzZXJzIGFuZCBvdGhlciBhTGF0dGUgbGljZW5zb3JzLiBFeGNlcHQgYXMgcHJvdmlkZWQgd2l0aGlu
IHRoaXMgQWdyZWVtZW50LCB5b3UgbWF5IG5vdCBjb3B5LCBtb2RpZnksIHRyYW5zbGF0ZSwgcHVibGlz
aCwgYnJvYWRjYXN0LCB0cmFuc21pdCwgZGlzdHJpYnV0ZSwgcGVyZm9ybSwgZGlzcGxheSwgb3Igc2Vs
bCBhbnkgQ29udGVudCBhcHBlYXJpbmcgb24gb3IgdGhyb3VnaCB0aGUgYUxhdHRlIFNlcnZpY2VzLg0K
DQogICAgICAgIDYuIGFMYXR0ZSBwZXJmb3JtcyB0ZWNobmljYWwgZnVuY3Rpb25zIG5lY2Vzc2FyeSB0
byBvZmZlciB0aGUgYUxhdHRlIFNlcnZpY2VzLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIHRy
YW5zY29kaW5nIGFuZC9vciByZWZvcm1hdHRpbmcgQ29udGVudCB0byBhbGxvdyBpdHMgdXNlIHRocm91
Z2hvdXQgdGhlIGFMYXR0ZSBTZXJ2aWNlcy4NCg0KICAgIDcuIENvbnRlbnQgUG9zdGVkLg0KDQogICAg
ICAgIDEuIGFMYXR0ZSBET0VTIE5PVCBDT05EVUNUIENSSU1JTkFMIEJBQ0tHUk9VTkQgQ0hFQ0tTLg0K
DQogICAgICAgIDIuIGFMYXR0ZSBtYXkgcmVqZWN0LCByZWZ1c2UgdG8gcG9zdCBvciBkZWxldGUgYW55
IENvbnRlbnQgZm9yIGFueSBvciBubyByZWFzb24sIGluY2x1ZGluZyBDb250ZW50IHRoYXQgaW4gdGhl
IHNvbGUganVkZ21lbnQgb2YgYUxhdHRlIHZpb2xhdGVzIHRoaXMgQWdyZWVtZW50IG9yIHdoaWNoIG1h
eSBiZSBvZmZlbnNpdmUsIGlsbGVnYWwgb3IgdmlvbGF0ZSB0aGUgcmlnaHRzIG9mIGFueSBwZXJzb24g
b3IgZW50aXR5LCBvciBoYXJtIG9yIHRocmVhdGVuIHRoZSBzYWZldHkgb2YgYW55IHBlcnNvbiBvciBl
bnRpdHkuIGFMYXR0ZSBhc3N1bWVzIG5vIHJlc3BvbnNpYmlsaXR5IGZvciBtb25pdG9yaW5nIHRoZSBh
TGF0dGUgU2VydmljZXMgZm9yIGluYXBwcm9wcmlhdGUgQ29udGVudCBvciBjb25kdWN0LiBJZiBhdCBh
bnkgdGltZSBhTGF0dGUgY2hvb3NlcywgaW4gaXRzIHNvbGUgZGlzY3JldGlvbiwgdG8gbW9uaXRvciB0
aGUgYUxhdHRlIFNlcnZpY2VzLCBhTGF0dGUgbm9uZXRoZWxlc3MgYXNzdW1lcyBubyByZXNwb25zaWJp
bGl0eSBmb3IgdGhlIENvbnRlbnQsIG5vIG9ibGlnYXRpb24gdG8gbW9kaWZ5IG9yIHJlbW92ZSBhbnkg
aW5hcHByb3ByaWF0ZSBDb250ZW50LCBhbmQgbm8gcmVzcG9uc2liaWxpdHkgZm9yIHRoZSBjb25kdWN0
IG9mIHRoZSBVc2VyIHN1Ym1pdHRpbmcgYW55IHN1Y2ggQ29udGVudC4NCg0KICAgICAgICAzLiBZb3Ug
YXJlIHNvbGVseSByZXNwb25zaWJsZSBmb3IgdGhlIENvbnRlbnQgdGhhdCB5b3UgcG9zdCBvbiBvciB0
aHJvdWdoIGFueSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzLCBhbmQgYW55IG1hdGVyaWFsIG9yIGluZm9y
bWF0aW9uIHRoYXQgeW91IHRyYW5zbWl0IHRvIG90aGVyIE1lbWJlcnMgYW5kIGZvciB5b3VyIGludGVy
YWN0aW9ucyB3aXRoIG90aGVyIFVzZXJzLg0KDQogICAgOC4gQ29udGVudC9BY3Rpdml0eSBQcm9oaWJp
dGVkLiBUaGUgZm9sbG93aW5nIGFyZSBleGFtcGxlcyBvZiB0aGUga2luZCBvZiBDb250ZW50IHRoYXQg
aXMgaWxsZWdhbCBvciBwcm9oaWJpdGVkIHRvIHBvc3Qgb24gb3IgdGhyb3VnaCB0aGUgYUxhdHRlIFNl
cnZpY2VzLiBhTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIGludmVzdGlnYXRlIGFuZCB0YWtlIGFw
cHJvcHJpYXRlIGxlZ2FsIGFjdGlvbiBhZ2FpbnN0IGFueW9uZSB3aG8sIGluIGFMYXR0ZSBzb2xlIGRp
c2NyZXRpb24sIHZpb2xhdGVzIHRoaXMgcHJvdmlzaW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0
aW9uLCByZW1vdmluZyB0aGUgb2ZmZW5kaW5nIENvbnRlbnQgZnJvbSB0aGUgYUxhdHRlIFNlcnZpY2Vz
IGFuZCB0ZXJtaW5hdGluZyB0aGUgTWVtYmVyc2hpcCBvZiBzdWNoIHZpb2xhdG9ycy4gUHJvaGliaXRl
ZCBDb250ZW50IGluY2x1ZGVzLCBidXQgaXMgbm90IGxpbWl0ZWQgdG8sIENvbnRlbnQgdGhhdCwgaW4g
dGhlIHNvbGUgZGlzY3JldGlvbiBvZiBhTGF0dGU6DQoNCiAgICAgICAgMS4gaXMgcGF0ZW50bHkgb2Zm
ZW5zaXZlIGFuZCBwcm9tb3RlcyByYWNpc20sIGJpZ290cnksIGhhdHJlZCBvciBwaHlzaWNhbCBoYXJt
IG9mIGFueSBraW5kIGFnYWluc3QgYW55IGdyb3VwIG9yIGluZGl2aWR1YWw7DQoNCiAgICAgICAgMi4g
aGFyYXNzZXMgb3IgYWR2b2NhdGVzIGhhcmFzc21lbnQgb2YgYW5vdGhlciBwZXJzb247DQoNCiAgICAg
ICAgMy4gZXhwbG9pdHMgcGVvcGxlIGluIGEgc2V4dWFsIG9yIHZpb2xlbnQgbWFubmVyOw0KDQogICAg
ICAgIDQuIGNvbnRhaW5zIG51ZGl0eSwgZXhjZXNzaXZlIHZpb2xlbmNlLCBvciBvZmZlbnNpdmUgc3Vi
amVjdCBtYXR0ZXIgb3IgY29udGFpbnMgYSBsaW5rIHRvIGFuIGFkdWx0IHdlYnNpdGU7DQoNCiAgICAg
ICAgNS4gcHVibGljbHkgcG9zdHMgaW5mb3JtYXRpb24gdGhhdCBwb3NlcyBvciBjcmVhdGVzIGEgcHJp
dmFjeSBvciBzZWN1cml0eSByaXNrIHRvIGFueSBwZXJzb247DQoNCiAgICAgICAgNi4gY29uc3RpdHV0
ZXMgb3IgcHJvbW90ZXMgaW5mb3JtYXRpb24gdGhhdCB5b3Uga25vdyBpcyBmYWxzZSBvciBtaXNsZWFk
aW5nIG9yIHByb21vdGVzIGlsbGVnYWwgYWN0aXZpdGllcyBvciBjb25kdWN0IHRoYXQgaXMgYWJ1c2l2
ZSwgdGhyZWF0ZW5pbmcsIG9ic2NlbmUsIGRlZmFtYXRvcnkgb3IgbGliZWxvdXM7DQoNCiAgICAgICAg
Ny4gY29uc3RpdHV0ZXMgb3IgcHJvbW90ZXMgYW4gaWxsZWdhbCBvciB1bmF1dGhvcml6ZWQgY29weSBv
ZiBhbm90aGVyIHBlcnNvbidzIGNvcHlyaWdodGVkIHdvcmssIHN1Y2ggYXMgcHJvdmlkaW5nIHBpcmF0
ZWQgY29tcHV0ZXIgcHJvZ3JhbXMgb3IgbGlua3MgdG8gdGhlbSwgcHJvdmlkaW5nIGluZm9ybWF0aW9u
IHRvIGNpcmN1bXZlbnQgbWFudWZhY3R1cmVyLWluc3RhbGxlZCBjb3B5LXByb3RlY3QgZGV2aWNlcywg
b3IgcHJvdmlkaW5nIHBpcmF0ZWQgbXVzaWMgb3IgbGlua3MgdG8gcGlyYXRlZCBtdXNpYyBmaWxlczsN
Cg0KICAgICAgICA4LiBpbnZvbHZlcyB0aGUgdHJhbnNtaXNzaW9uIG9mICJqdW5rIG1haWwsIiAiY2hh
aW4gbGV0dGVycywiIG9yIHVuc29saWNpdGVkIG1hc3MgbWFpbGluZywgaW5zdGFudCBtZXNzYWdpbmcs
ICJzcGltbWluZywiIG9yICJzcGFtbWluZyI7DQoNCiAgICAgICAgOS4gY29udGFpbnMgcmVzdHJpY3Rl
ZCBvciBwYXNzd29yZCBvbmx5IGFjY2VzcyBwYWdlcyBvciBoaWRkZW4gcGFnZXMgb3IgaW1hZ2VzICh0
aG9zZSBub3QgbGlua2VkIHRvIG9yIGZyb20gYW5vdGhlciBhY2Nlc3NpYmxlIHBhZ2UpOw0KDQogICAg
ICAgIDEwLiBmdXJ0aGVycyBvciBwcm9tb3RlcyBhbnkgY3JpbWluYWwgYWN0aXZpdHkgb3IgZW50ZXJw
cmlzZSBvciBwcm92aWRlcyBpbnN0cnVjdGlvbmFsIGluZm9ybWF0aW9uIGFib3V0IGlsbGVnYWwgYWN0
aXZpdGllcyBpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0byBtYWtpbmcgb3IgYnV5aW5nIGlsbGVn
YWwgd2VhcG9ucywgdmlvbGF0aW5nIHNvbWVvbmUncyBwcml2YWN5LCBvciBwcm92aWRpbmcgb3IgY3Jl
YXRpbmcgY29tcHV0ZXIgdmlydXNlczsNCg0KICAgICAgICAxMS4gc29saWNpdHMgcGFzc3dvcmRzIG9y
IHBlcnNvbmFsIGlkZW50aWZ5aW5nIGluZm9ybWF0aW9uIGZvciBjb21tZXJjaWFsIG9yIHVubGF3ZnVs
IHB1cnBvc2VzIGZyb20gb3RoZXIgVXNlcnM7DQoNCiAgICAgICAgMTIuIGludm9sdmVzIGNvbW1lcmNp
YWwgYWN0aXZpdGllcyBhbmQvb3Igc2FsZXMgd2l0aG91dCBwcmlvciB3cml0dGVuIGNvbnNlbnQgZnJv
bSBhTGF0dGUgc3VjaCBhcyBjb250ZXN0cywgc3dlZXBzdGFrZXMsIGJhcnRlciwgYWR2ZXJ0aXNpbmcs
IG9yIHB5cmFtaWQgc2NoZW1lczsNCg0KICAgICAgICAxMy4gaW5jbHVkZXMgYSBwaG90b2dyYXBoIG9y
IHZpZGVvIG9mIGFub3RoZXIgcGVyc29uIHRoYXQgeW91IGhhdmUgcG9zdGVkIHdpdGhvdXQgdGhhdCBw
ZXJzb24ncyBjb25zZW50Ow0KDQogICAgICAgIDE0LiBmb3IgYmFuZCwgY29tZWR5LCBmaWxtbWFrZXIg
YW5kIG90aGVyIHByb2ZpbGVzLCB1c2VzIHNleHVhbGx5IHN1Z2dlc3RpdmUgaW1hZ2VyeSBvciBhbnkg
b3RoZXIgdW5mYWlyLCBtaXNsZWFkaW5nIG9yIGRlY2VwdGl2ZSBDb250ZW50IGludGVuZGVkIHRvIGRy
YXcgdHJhZmZpYyB0byB0aGUgcHJvZmlsZTsgb3INCg0KICAgICAgICAxNS4gdmlvbGF0ZXMgdGhlIHBy
aXZhY3kgcmlnaHRzLCBwdWJsaWNpdHkgcmlnaHRzLCBjb3B5cmlnaHRzLCB0cmFkZW1hcmsgcmlnaHRz
LCBjb250cmFjdCByaWdodHMgb3IgYW55IG90aGVyIHJpZ2h0cyBvZiBhbnkgcGVyc29uLg0KDQogICAg
ICAgIFRoZSBmb2xsb3dpbmcgYXJlIGV4YW1wbGVzIG9mIHRoZSBraW5kIG9mIGFjdGl2aXR5IHRoYXQg
aXMgaWxsZWdhbCBvciBwcm9oaWJpdGVkIG9uIHRoZSBhTGF0dGUgV2Vic2l0ZSBhbmQgdGhyb3VnaCB5
b3VyIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzLiBhTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRv
IGludmVzdGlnYXRlIGFuZCB0YWtlIGFwcHJvcHJpYXRlIGxlZ2FsIGFjdGlvbiBhZ2FpbnN0IGFueW9u
ZSB3aG8sIGluIGFMYXR0ZSdzIHNvbGUgZGlzY3JldGlvbiwgdmlvbGF0ZXMgdGhpcyBwcm92aXNpb24s
IGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24sIHJlcG9ydGluZyB5b3UgdG8gbGF3IGVuZm9yY2Vt
ZW50IGF1dGhvcml0aWVzLiBQcm9oaWJpdGVkIGFjdGl2aXR5IGluY2x1ZGVzLCBidXQgaXMgbm90IGxp
bWl0ZWQgdG86DQoNCiAgICAgICAgMTYuIGNyaW1pbmFsIG9yIHRvcnRpb3VzIGFjdGl2aXR5LCBpbmNs
dWRpbmcgY2hpbGQgcG9ybm9ncmFwaHksIGZyYXVkLCB0cmFmZmlja2luZyBpbiBvYnNjZW5lIG1hdGVy
aWFsLCBkcnVnIGRlYWxpbmcsIGdhbWJsaW5nLCBoYXJhc3NtZW50LCBzdGFsa2luZywgc3BhbW1pbmcs
IHNwaW1taW5nLCBzZW5kaW5nIG9mIHZpcnVzZXMgb3Igb3RoZXIgaGFybWZ1bCBmaWxlcywgY29weXJp
Z2h0IGluZnJpbmdlbWVudCwgcGF0ZW50IGluZnJpbmdlbWVudCwgb3IgdGhlZnQgb2YgdHJhZGUgc2Vj
cmV0czsNCg0KICAgICAgICAxNy4gYWR2ZXJ0aXNpbmcgdG8sIG9yIHNvbGljaXRhdGlvbiBvZiwgYW55
IE1lbWJlciB0byBidXkgb3Igc2VsbCBhbnkgcHJvZHVjdHMgb3Igc2VydmljZXMgdGhyb3VnaCB0aGUg
dW5hdXRob3JpemVkIG9yIGltcGVybWlzc2libGUgdXNlIG9mIHRoZSBhTGF0dGUgU2VydmljZXMuIFlv
dSBtYXkgbm90IHRyYW5zbWl0IGFueSBjaGFpbiBsZXR0ZXJzIG9yIGp1bmsgbWVzc2FnZXMgdG8gb3Ro
ZXIgTWVtYmVycy4gSW4gb3JkZXIgdG8gcHJvdGVjdCBvdXIgTWVtYmVycyBmcm9tIHN1Y2ggYWR2ZXJ0
aXNpbmcgb3Igc29saWNpdGF0aW9uLCBhTGF0dGUgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIHJlc3RyaWN0
IHRoZSBudW1iZXIgb2YgbWVzc2FnZXMgd2hpY2ggYSBNZW1iZXIgbWF5IHNlbmQgdG8gb3RoZXIgTWVt
YmVycyBpbiBhbnkgMjQtaG91ciBwZXJpb2QgdG8gYSBudW1iZXIgd2hpY2ggYUxhdHRlIGRlZW1zIGFw
cHJvcHJpYXRlIGluIGl0cyBzb2xlIGRpc2NyZXRpb24uIElmIHlvdSBicmVhY2ggdGhpcyBBZ3JlZW1l
bnQgYW5kIHNlbmQgdW5zb2xpY2l0ZWQgYnVsayBlbWFpbCwgaW5zdGFudCBtZXNzYWdlcyBvciBvdGhl
ciB1bmF1dGhvcml6ZWQgY29tbWVyY2lhbCBjb21tdW5pY2F0aW9ucyBvZiBhbnkga2luZCB0aHJvdWdo
IHRoZSBhTGF0dGUgU2VydmljZXMsIHlvdSBhY2tub3dsZWRnZSB0aGF0IHlvdSB3aWxsIGhhdmUgY2F1
c2VkIHN1YnN0YW50aWFsIGhhcm0gdG8gYUxhdHRlLCBidXQgdGhhdCB0aGUgYW1vdW50IG9mIHN1Y2gg
aGFybSB3b3VsZCBiZSBleHRyZW1lbHkgZGlmZmljdWx0IHRvIGFzY2VydGFpbi4gDQoNCiAgICAgICAg
MTguIGNpcmN1bXZlbnRpbmcgb3IgbW9kaWZ5aW5nLCBhdHRlbXB0aW5nIHRvIGNpcmN1bXZlbnQgb3Ig
bW9kaWZ5LCBvciBlbmNvdXJhZ2luZyBvciBhc3Npc3RpbmcgYW55IG90aGVyIHBlcnNvbiBpbiBjaXJj
dW12ZW50aW5nIG9yIG1vZGlmeWluZyBhbnkgc2VjdXJpdHkgdGVjaG5vbG9neSBvciBzb2Z0d2FyZSB0
aGF0IGlzIHBhcnQgb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlczsNCg0KICAgICAgICAxOS4gYWN0aXZpdHkg
dGhhdCBpbnZvbHZlcyB0aGUgdXNlIG9mIHZpcnVzZXMsIGJvdHMsIHdvcm1zLCBvciBhbnkgb3RoZXIg
Y29tcHV0ZXIgY29kZSwgZmlsZXMgb3IgcHJvZ3JhbXMgdGhhdCBpbnRlcnJ1cHQsIGRlc3Ryb3kgb3Ig
bGltaXQgdGhlIGZ1bmN0aW9uYWxpdHkgb2YgYW55IGNvbXB1dGVyIHNvZnR3YXJlIG9yIGhhcmR3YXJl
LCBvciBvdGhlcndpc2UgcGVybWl0IHRoZSB1bmF1dGhvcml6ZWQgdXNlIG9mIG9yIGFjY2VzcyB0byBh
IGNvbXB1dGVyIG9yIGEgY29tcHV0ZXIgbmV0d29yazsNCg0KICAgICAgICAyMC4gY292ZXJpbmcgb3Ig
b2JzY3VyaW5nIGFueSBiYW5uZXIgYWR2ZXJ0aXNlbWVudHMgb24geW91ciBwZXJzb25hbCBwcm9maWxl
IHBhZ2UsIG9yIGFueSBhTGF0dGUgcGFnZSB2aWEgSFRNTC9DU1Mgb3IgYW55IG90aGVyIG1lYW5zOw0K
DQogICAgICAgIDIxLiBhbnkgYXV0b21hdGVkIHVzZSBvZiB0aGUgc3lzdGVtLCBzdWNoIGFzLCBidXQg
bm90IGxpbWl0ZWQgdG8sIHVzaW5nIHNjcmlwdHMgdG8gYWRkIGZyaWVuZHMgb3Igc2VuZCBjb21tZW50
cyBvciBtZXNzYWdlczsNCg0KICAgICAgICAyMi4gaW50ZXJmZXJpbmcgd2l0aCwgZGlzcnVwdGluZywg
b3IgY3JlYXRpbmcgYW4gdW5kdWUgYnVyZGVuIG9uIHRoZSBhTGF0dGUgU2VydmljZXMgb3IgdGhlIG5l
dHdvcmtzIG9yIHNlcnZpY2VzIGNvbm5lY3RlZCB0byB0aGUgYUxhdHRlIFNlcnZpY2VzOw0KDQogICAg
ICAgIDIzLiBpbXBlcnNvbmF0aW5nIG9yIGF0dGVtcHRpbmcgdG8gaW1wZXJzb25hdGUgYW5vdGhlciBN
ZW1iZXIsIHBlcnNvbiBvciBlbnRpdHk7DQoNCiAgICAgICAgMjQuIGZvciBiYW5kLCBjb21lZHksIGZp
bG1tYWtlciBhbmQgb3RoZXIgcHJvZmlsZXMgY29udGFpbmluZyBhIGFMYXR0ZSBwbGF5ZXIsIGNvcHlp
bmcgdGhlIGNvZGUgZm9yIHlvdXIgYUxhdHRlIFBsYXllciBhbmQgZW1iZWRkaW5nIGl0IChvciBkaXJl
Y3Rpbmcgb3RoZXJzIHRvIGVtYmVkIGl0KSBhbnl3aGVyZSBvdGhlciB0aGFuIHlvdXIgYmFuZCBwcm9m
aWxlIG9uIGFMYXR0ZTsNCg0KICAgICAgICAyNS4gdXNpbmcgdGhlIGFjY291bnQsIHVzZXJuYW1lLCBv
ciBwYXNzd29yZCBvZiBhbm90aGVyIE1lbWJlciBhdCBhbnkgdGltZSBvciBkaXNjbG9zaW5nIHlvdXIg
cGFzc3dvcmQgdG8gYW55IHRoaXJkIHBhcnR5IG9yIHBlcm1pdHRpbmcgYW55IHRoaXJkIHBhcnR5IHRv
IGFjY2VzcyB5b3VyIGFjY291bnQ7DQoNCiAgICAgICAgMjYuIHNlbGxpbmcgb3Igb3RoZXJ3aXNlIHRy
YW5zZmVycmluZyB5b3VyIHByb2ZpbGU7DQoNCiAgICAgICAgMjcuIHVzaW5nIGFueSBpbmZvcm1hdGlv
biBvYnRhaW5lZCBmcm9tIHRoZSBhTGF0dGUgU2VydmljZXMgaW4gb3JkZXIgdG8gaGFyYXNzLCBhYnVz
ZSwgb3IgaGFybSBhbm90aGVyIHBlcnNvbiBvciBlbnRpdHksIG9yIGF0dGVtcHRpbmcgdG8gZG8gdGhl
IHNhbWU7DQoNCiAgICAgICAgMjguIGRpc3BsYXlpbmcgYW4gdW5hdXRob3JpemVkIGNvbW1lcmNpYWwg
YWR2ZXJ0aXNlbWVudCBvbiB5b3VyIHByb2ZpbGUsIG9yIGFjY2VwdGluZyBwYXltZW50IG9yIGFueXRo
aW5nIG9mIHZhbHVlIGZyb20gYSB0aGlyZCBwZXJzb24gaW4gZXhjaGFuZ2UgZm9yIHlvdXIgcGVyZm9y
bWluZyBhbnkgY29tbWVyY2lhbCBhY3Rpdml0eSB0aHJvdWdoIHRoZSB1bmF1dGhvcml6ZWQgb3IgaW1w
ZXJtaXNzaWJsZSB1c2Ugb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBvbiBiZWhhbGYgb2YgdGhhdCBwZXJz
b24sIHN1Y2ggYXMgcGxhY2luZyBjb21tZXJjaWFsIGNvbnRlbnQgb24geW91ciBwcm9maWxlLCBwb3N0
aW5nIGJsb2dzIG9yIGJ1bGxldGlucyB3aXRoIGEgY29tbWVyY2lhbCBwdXJwb3NlLCBzZWxlY3Rpbmcg
YSBwcm9maWxlIHdpdGggYSBjb21tZXJjaWFsIHB1cnBvc2UgYXMgYSBtZW1iZXIgb2YgeW91ciBob3Rs
aXN0LCBvciBzZW5kaW5nIHByaXZhdGUgbWVzc2FnZXMgd2l0aCBhIGNvbW1lcmNpYWwgcHVycG9zZTsg
b3INCg0KICAgICAgICAyOS4gdXNpbmcgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBpbiBhIG1hbm5lciBpbmNv
bnNpc3RlbnQgd2l0aCBhbnkgYW5kIGFsbCBhcHBsaWNhYmxlIGxhd3MgYW5kIHJlZ3VsYXRpb25zLg0K
DQogICAgOS4gUHJvdGVjdGluZyBDb3B5cmlnaHRzIGFuZCBPdGhlciBJbnRlbGxlY3R1YWwgUHJvcGVy
dHkuIGFMYXR0ZSByZXNwZWN0cyB0aGUgaW50ZWxsZWN0dWFsIHByb3BlcnR5IG9mIG90aGVycywgYW5k
IHJlcXVpcmVzIHRoYXQgb3VyIHVzZXJzIGRvIHRoZSBzYW1lLiBZb3UgbWF5IG5vdCB1cGxvYWQsIGVt
YmVkLCBwb3N0LCBlbWFpbCwgdHJhbnNtaXQgb3Igb3RoZXJ3aXNlIG1ha2UgYXZhaWxhYmxlIGFueSBt
YXRlcmlhbCB0aGF0IGluZnJpbmdlcyBhbnkgY29weXJpZ2h0LCBwYXRlbnQsIHRyYWRlbWFyaywgdHJh
ZGUgc2VjcmV0IG9yIG90aGVyIHByb3ByaWV0YXJ5IHJpZ2h0cyBvZiBhbnkgcGVyc29uIG9yIGVudGl0
eS4gYUxhdHRlIGhhcyB0aGUgcmlnaHQgdG8gdGVybWluYXRlIHRoZSBNZW1iZXJzaGlwIG9mIGluZnJp
bmdlcnMuDQogICAgSWYgeW91IGJlbGlldmUgeW91ciB3b3JrIGhhcyBiZWVuIGNvcGllZCBhbmQgcG9z
dGVkIG9uIG9yIHRocm91Z2ggdGhlIGFMYXR0ZSBTZXJ2aWNlcyBpbiBhIHdheSB0aGF0IGNvbnN0aXR1
dGVzIGNvcHlyaWdodCBpbmZyaW5nZW1lbnQsIHBsZWFzZSBzZW5kIGFuIGVtYWlsIHRvIHN1cHBvcnRA
YWxhdHRlYXBwLmNvbSBvZiBjbGFpbWVkIGluZnJpbmdlbWVudCB3aXRoIGFsbCBvZiB0aGUgZm9sbG93
aW5nIGluZm9ybWF0aW9uOiAoYSkgaWRlbnRpZmljYXRpb24gb2YgdGhlIGNvcHlyaWdodGVkIHdvcmsg
Y2xhaW1lZCB0byBoYXZlIGJlZW4gaW5mcmluZ2VkLCBvciwgaWYgbXVsdGlwbGUgY29weXJpZ2h0ZWQg
d29ya3MgYXJlIGNvdmVyZWQgYnkgYSBzaW5nbGUgbm90aWZpY2F0aW9uLCBhIHJlcHJlc2VudGF0aXZl
IGxpc3Qgb2Ygc3VjaCB3b3JrczsgKGIpIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBjbGFpbWVkIGluZnJp
bmdpbmcgbWF0ZXJpYWwgYW5kIGluZm9ybWF0aW9uIHJlYXNvbmFibHkgc3VmZmljaWVudCB0byBwZXJt
aXQgdXMgdG8gbG9jYXRlIHRoZSBtYXRlcmlhbCBvbiB0aGUgYUxhdHRlIFNlcnZpY2VzIChwcm92aWRp
bmcgdGhlIFVSTChzKSBvZiB0aGUgY2xhaW1lZCBpbmZyaW5naW5nIG1hdGVyaWFsIHNhdGlzZmllcyB0
aGlzIHJlcXVpcmVtZW50KTsgKGMpIGluZm9ybWF0aW9uIHJlYXNvbmFibHkgc3VmZmljaWVudCB0byBw
ZXJtaXQgdXMgdG8gY29udGFjdCB5b3UsIHN1Y2ggYXMgYW4gYWRkcmVzcywgdGVsZXBob25lIG51bWJl
ciwgYW5kLCBpZiBhdmFpbGFibGUsIGFuIGVtYWlsIGFkZHJlc3M7IChkKSBhIHN0YXRlbWVudCBieSB5
b3UgdGhhdCB5b3UgaGF2ZSBhIGdvb2QgZmFpdGggYmVsaWVmIHRoYXQgdGhlIGRpc3B1dGVkIHVzZSBp
cyBub3QgYXV0aG9yaXplZCBieSB0aGUgY29weXJpZ2h0IG93bmVyLCBpdHMgYWdlbnQsIG9yIHRoZSBs
YXc7IChlKSBhIHN0YXRlbWVudCBieSB5b3UsIG1hZGUgdW5kZXIgcGVuYWx0eSBvZiBwZXJqdXJ5LCB0
aGF0IHRoZSBhYm92ZSBpbmZvcm1hdGlvbiBpbiB5b3VyIG5vdGlmaWNhdGlvbiBpcyBhY2N1cmF0ZSBh
bmQgdGhhdCB5b3UgYXJlIHRoZSBjb3B5cmlnaHQgb3duZXIgb3IgYSB1dGhvcml6ZWQgdG8gYWN0IG9u
IHRoZSBjb3B5cmlnaHQgb3duZXIncyBiZWhhbGY7IGFuZCAoZikgeW91ciBwaHlzaWNhbCBvciBlbGVj
dHJvbmljIHNpZ25hdHVyZS4gDQoNCiAgICAxMC4gTWVtYmVyIERpc3B1dGVzLiBZb3UgYXJlIHNvbGVs
eSByZXNwb25zaWJsZSBmb3IgeW91ciBpbnRlcmFjdGlvbnMgd2l0aCBvdGhlciBhTGF0dGUgTWVtYmVy
cy4gYUxhdHRlIHJlc2VydmVzIHRoZSByaWdodCwgYnV0IGhhcyBubyBvYmxpZ2F0aW9uLCB0byBiZWNv
bWUgaW52b2x2ZWQgaW4gYW55IHdheSB3aXRoIGRpc3B1dGVzIGJldHdlZW4geW91IGFuZCBvdGhlciBN
ZW1iZXJzLg0KDQogICAgMTEuIFByaXZhY3kuIFVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzIGlzIGFs
c28gZ292ZXJuZWQgYnkgb3VyIFByaXZhY3kgUG9saWN5LCB3aGljaCBpcyBpbmNvcnBvcmF0ZWQgaW50
byB0aGlzIEFncmVlbWVudCBieSB0aGlzIHJlZmVyZW5jZS4NCg0KICAgIDEyLiBEaXNjbGFpbWVycy4g
YUxhdHRlIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW5kIG1ha2VzIG5vIHdhcnJhbnRpZXMsIGV4cHJl
c3Mgb3IgaW1wbGllZCwgYXMgdG8gdGhlIFVzZXIgQ29udGVudCBvciB0aGUgYWNjdXJhY3kgYW5kIHJl
bGlhYmlsaXR5IG9mIHRoZSBVc2VyIENvbnRlbnQgcG9zdGVkIG9uIG9yIHRocm91Z2ggdGhlIGFMYXR0
ZSBTZXJ2aWNlcywgd2hldGhlciBjYXVzZWQgYnkgVXNlcnMgb2YgdGhlIGFMYXR0ZSBTZXJ2aWNlcyBv
ciBieSBhbnkgb2YgdGhlIGVxdWlwbWVudCBvciBwcm9ncmFtbWluZyBhc3NvY2lhdGVkIHdpdGggb3Ig
dXRpbGl6ZWQgaW4gdGhlIGFMYXR0ZSBTZXJ2aWNlcyBhbmQgc3VjaCBVc2VyIENvbnRlbnQgZG9lcyBu
b3QgbmVjZXNzYXJpbHkgcmVmbGVjdCB0aGUgb3BpbmlvbnMgb3IgcG9saWNpZXMgb2YgYUxhdHRlLiBQ
cm9maWxlcyBhbmQgdGhpcmQgcGFydHkgYXBwbGljYXRpb25zIGNyZWF0ZWQgYW5kIHBvc3RlZCBieSBN
ZW1iZXJzIG9uIHRoZSBhTGF0dGUgV2Vic2l0ZSBtYXkgY29udGFpbiBsaW5rcyB0byBvdGhlciB3ZWJz
aXRlcy4gYUxhdHRlIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgdGhlIGNvbnRlbnQsIGFjY3VyYWN5IG9y
IG9waW5pb25zIGV4cHJlc3NlZCBvbiBzdWNoIHdlYnNpdGVzLCBhbmQgc3VjaCB3ZWJzaXRlcyBhcmUg
bm90IG5lY2Vzc2FyaWx5IGludmVzdGlnYXRlZCwgbW9uaXRvcmVkIG9yIGNoZWNrZWQgZm9yIGFjY3Vy
YWN5IG9yIGNvbXBsZXRlbmVzcyBieSBhTGF0dGUuIEluY2x1c2lvbiBvZiBhbnkgbGlua2VkIHdlYnNp
dGUgb24gdGhlIGFMYXR0ZSBTZXJ2aWNlcyBkb2VzIG5vdCBpbXBseSBhcHByb3ZhbCBvciBlbmRvcnNl
bWVudCBvZiB0aGUgbGlua2VkIHdlYnNpdGUgYnkgYUxhdHRlLiBXaGVuIHlvdSBhY2Nlc3MgdGhlc2Ug
dGhpcmQgcGFydHkgc2l0ZXMsIHlvdSBkbyBzbyBhdCB5b3VyIG93biByaXNrLiBhTGF0dGUgdGFrZXMg
bm8gcmVzcG9uc2liaWxpdHkgZm9yIHRoaXJkIHBhcnR5IGFkdmVydGlzZW1lbnRzIG9yIHRoaXJkIHBh
cnR5IGFwcGxpY2F0aW9ucyB0aGF0IGFyZSBwb3N0ZWQgb24gb3IgdGhyb3VnaCB0aGUgYUxhdHRlIFNl
cnZpY2VzLCBub3IgZG9lcyBpdCB0YWtlIGFueSByZXNwb25zaWJpbGl0eSBmb3IgdGhlIGdvb2RzIG9y
IHNlcnZpY2VzIHByb3ZpZGVkIGJ5IGl0cyBhZHZlcnRpc2Vycy4gYUxhdHRlIGlzIG5vdCByZXNwb25z
aWJsZSBmb3IgdGhlIGNvbmR1Y3QsIHdoZXRoZXIgb25saW5lIG9yIG9mZmxpbmUsIG9mIGFueSBVc2Vy
IG9mIHRoZSBhTGF0dGUgU2VydmljZXMuIGFMYXR0ZSBhc3N1bWVzIG5vIHJlc3BvbnNpYmlsaXR5IGZv
ciBhbnkgZXJyb3IsIG9taXNzaW9uLCBpbnRlcnJ1cHRpb24sIGRlbGV0aW9uLCBkZWZlY3QsIGRlbGF5
IGluIG9wZXJhdGlvbiBvciB0cmFuc21pc3Npb24sIGNvbW11bmljYXRpb25zIGxpbmUgZmFpbHVyZSwg
dGhlZnQgb3IgZGVzdHJ1Y3Rpb24gb3IgdW5hdXRob3JpemVkIGFjY2VzcyB0bywgb3IgYWx0ZXJhdGlv
biBvZiwgYW55IFVzZXIgb3IgTWVtYmVyIGNvbW11bmljYXRpb24uIGFMYXR0ZSBpcyBub3QgcmVzcG9u
c2libGUgZm9yIGFueSBwcm9ibGVtcyBvciB0ZWNobmljYWwgbWFsZnVuY3Rpb24gb2YgYW55IHRlbGVw
aG9uZSBuZXR3b3JrIG9yIGxpbmVzLCBjb21wdXRlciBvbmxpbmUgc3lzdGVtcywgc2VydmVycyBvciBw
cm92aWRlcnMsIGNvbXB1dGVyIGVxdWlwbWVudCwgc29mdHdhcmUsIGZhaWx1cmUgb2YgYW55IGVtYWls
IG9yIHBsYXllcnMgZHVlIHRvIHRlY2huaWNhbCBwcm9ibGVtcyBvciB0cmFmZmljIGNvbmdlc3Rpb24g
b24gdGhlIEludGVybmV0IG9yIG9uIGFueSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzIG9yIGNvbWJpbmF0
aW9uIHRoZXJlb2YsIGluY2x1ZGluZyBhbnkgaW5qdXJ5IG9yIGRhbWFnZSB0byBVc2VycyBvciB0byBh
bnkgcGVyc29uJ3MgY29tcHV0ZXIgcmVsYXRlZCB0byBvciByZXN1bHRpbmcgZnJvbSBwYXJ0aWNpcGF0
aW9uIG9yIGRvd25sb2FkaW5nIG1hdGVyaWFscyBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGFMYXR0ZSBT
ZXJ2aWNlcy4gVW5kZXIgbm8gY2lyY3Vtc3RhbmNlcyBzaGFsbCBhTGF0dGUgYmUgcmVzcG9uc2libGUg
Zm9yIGFueSBsb3NzIG9yIGRhbWFnZSwgaW5jbHVkaW5nIHBlcnNvbmFsIGluanVyeSBvciBkZWF0aCwg
cmVzdWx0aW5nIGZyb20gdXNlIG9mIHRoZSBhTGF0dGUgU2VydmljZXMsIGF0dGVuZGFuY2UgYXQgYSBh
TGF0dGUgZXZlbnQsIGZyb20gYW55IFVzZXIgQ29udGVudCBwb3N0ZWQgb24gb3IgdGhyb3VnaCB0aGUg
YUxhdHRlIFNlcnZpY2VzLCBvciBmcm9tIHRoZSBjb25kdWN0IG9mIGFueSBVc2VycyBvZiB0aGUgYUxh
dHRlIFNlcnZpY2VzLCB3aGV0aGVyIG9ubGluZSBvciBvZmZsaW5lLiBUaGUgYUxhdHRlIFNlcnZpY2Vz
IGFyZSBwcm92aWRlZCAiQVMtSVMiIGFuZCBhcyBhdmFpbGFibGUgYW5kIGFMYXR0ZSBleHByZXNzbHkg
ZGlzY2xhaW1zIGFueSB3YXJyYW50eSBvZiBmaXRuZXNzIGZvciBhIHBhcnRpY3VsYXIgcHVycG9zZSBv
ciBub24taW5mcmluZ2VtZW50LiBhTGF0dGUgY2Fubm90IGd1YXJhbnRlZSBhbmQgZG9lcyBub3QgcHJv
bWlzZSBhbnkgc3BlY2lmaWMgcmVzdWx0cyBmcm9tIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzLg0K
DQogICAgMTMuIExpbWl0YXRpb24gb24gTGlhYmlsaXR5LiBJTiBOTyBFVkVOVCBTSEFMTCBhTGF0dGUg
QkUgTElBQkxFIFRPIFlPVSBPUiBBTlkgVEhJUkQgUEFSVFkgRk9SIEFOWSBJTkRJUkVDVCwgQ09OU0VR
VUVOVElBTCwgRVhFTVBMQVJZLCBJTkNJREVOVEFMLCBTUEVDSUFMIE9SIFBVTklUSVZFIERBTUFHRVMs
IElOQ0xVRElORyBMT1NUIFBST0ZJVCBEQU1BR0VTIEFSSVNJTkcgRlJPTSBZT1VSIFVTRSBPRiBUSEUg
YUxhdHRlIFNFUlZJQ0VTLCBFVkVOIElGIGFMYXR0ZSBIQVMgQkVFTiBBRFZJU0VEIE9GIFRIRSBQT1NT
SUJJTElUWSBPRiBTVUNIIERBTUFHRVMuIE5PVFdJVEhTVEFORElORyBBTllUSElORyBUTyBUSEUgQ09O
VFJBUlkgQ09OVEFJTkVEIEhFUkVJTiwgYUxhdHRlJ1MgTElBQklMSVRZIFRPIFlPVSBGT1IgQU5ZIENB
VVNFIFdIQVRTT0VWRVIgQU5EIFJFR0FSRExFU1MgT0YgVEhFIEZPUk0gT0YgVEhFIEFDVElPTiwgV0lM
TCBBVCBBTEwgVElNRVMgQkUgTElNSVRFRCBUTyBUSEUgQU1PVU5UIFBBSUQsIElGIEFOWSwgQlkgWU9V
IFRPIGFMYXR0ZSBGT1IgVEhFIGFMYXR0ZSBTRVJWSUNFUyBEVVJJTkcgVEhFIFRFUk0gT0YgTUVNQkVS
U0hJUC4NCg0KICAgIDE0LiBVLlMuIEV4cG9ydCBDb250cm9scy4gU29mdHdhcmUgYXZhaWxhYmxlIGlu
IGNvbm5lY3Rpb24gd2l0aCB0aGUgYUxhdHRlIFNlcnZpY2VzICh0aGUgIlNvZnR3YXJlIikgaXMgZnVy
dGhlciBzdWJqZWN0IHRvIFVuaXRlZCBTdGF0ZXMgZXhwb3J0IGNvbnRyb2xzLiBObyBTb2Z0d2FyZSBt
YXkgYmUgZG93bmxvYWRlZCBmcm9tIHRoZSBhTGF0dGUgU2VydmljZXMgb3Igb3RoZXJ3aXNlIGV4cG9y
dGVkIG9yIHJlLWV4cG9ydGVkIGluIHZpb2xhdGlvbiBvZiBVLlMuIGV4cG9ydCBsYXdzLiBEb3dubG9h
ZGluZyBvciB1c2luZyB0aGUgU29mdHdhcmUgaXMgYXQgeW91ciBzb2xlIHJpc2suDQoNCiAgICAxNS4g
RGlzcHV0ZXMuIFRoZSBBZ3JlZW1lbnQgc2hhbGwgYmUgZ292ZXJuZWQgYnksIGFuZCBjb25zdHJ1ZWQg
aW4gYWNjb3JkYW5jZSB3aXRoLCB0aGUgbGF3cyBvZiB0aGUgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgd2l0
aG91dCByZWdhcmQgdG8gaXRzIGNvbmZsaWN0IG9mIGxhdyBwcm92aXNpb25zLiBZb3UgYW5kIGFMYXR0
ZSBhZ3JlZSB0byBzdWJtaXQgdG8gdGhlIGV4Y2x1c2l2ZSBqdXJpc2RpY3Rpb24gb2YgdGhlIGNvdXJ0
cyBsb2NhdGVkIHdpdGhpbiB0aGUgU3RhdGUgb2YgQ2FsaWZvcm5pYSB0byByZXNvbHZlIGFueSBkaXNw
dXRlIGFyaXNpbmcgb3V0IG9mIHRoZSBBZ3JlZW1lbnQgb3IgdGhlIGFMYXR0ZSBTZXJ2aWNlcy4gRUFD
SCBPRiBUSEUgUEFSVElFUyBIRVJFQlkgS05PV0lOR0xZLCBWT0xVTlRBUklMWSBBTkQgSU5URU5USU9O
QUxMWSBXQUlWRVMgQU5ZIFJJR0hUIElUIE1BWSBIQVZFIFRPIEEgVFJJQUwgQlkgSlVSWSBJTiBSRVNQ
RUNUIE9GIEFOWSBMSVRJR0FUSU9OIChJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIEFOWSBDTEFJ
TVMsIENPVU5URVJDTEFJTVMsIENST1NTLUNMQUlNUywgT1IgVEhJUkQgUEFSVFkgQ0xBSU1TKSBBUklT
SU5HIE9VVCBPRiwgVU5ERVIgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRISVMgQUdSRUVNRU5ULiBGVVJU
SEVSLCBFQUNIIFBBUlRZIEhFUkVUTyBDRVJUSUZJRVMgVEhBVCBOTyBSRVBSRVNFTlRBVElWRSBPUiBB
R0VOVCBPRiBFSVRIRVIgUEFSVFkgSEFTIFJFUFJFU0VOVEVELCBFWFBSRVNTTFkgT1IgT1RIRVJXSVNF
LCBUSEFUIFNVQ0ggUEFSVFkgV09VTEQgTk9UIElOIFRIRSBFVkVOVCBPRiBTVUNIIExJVElHQVRJT04s
IFNFRUsgVE8gRU5GT1JDRSBUSElTIFdBSVZFUiBPRiBSSUdIVCBUTyBKVVJZIFRSSUFMIFBST1ZJU0lP
Ti4gRUFDSCBPRiBUSEUgUEFSVElFUyBBQ0tOT1dMRURHRVMgVEhBVCBUSElTIFNFQ1RJT04gSVMgQSBN
QVRFUklBTCBJTkRVQ0VNRU5UIEZPUiBUSEUgT1RIRVIgUEFSVFkgRU5URVJJTkcgSU5UTyBUSElTIEFH
UkVFTUVOVC4NCg0KICAgIDE2LiBJbmRlbW5pdHkuIFlvdSBhZ3JlZSB0byBpbmRlbW5pZnkgYW5kIGhv
bGQgYUxhdHRlLCBpdHMgc3Vic2lkaWFyaWVzLCBhbmQgYWZmaWxpYXRlcywgYW5kIHRoZWlyIHJlc3Bl
Y3RpdmUgb2ZmaWNlcnMsIGFnZW50cywgcGFydG5lcnMgYW5kIGVtcGxveWVlcywgaGFybWxlc3MgZnJv
bSBhbnkgbG9zcywgbGlhYmlsaXR5LCBjbGFpbSwgb3IgZGVtYW5kLCBpbmNsdWRpbmcgcmVhc29uYWJs
ZSBhdHRvcm5leXMnIGZlZXMsIG1hZGUgYnkgYW55IHRoaXJkIHBhcnR5IGR1ZSB0byBvciBhcmlzaW5n
IG91dCBvZiB5b3VyIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZpY2VzIGluIHZpb2xhdGlvbiBvZiB0aGlz
IEFncmVlbWVudCBhbmQvb3IgYXJpc2luZyBmcm9tIGEgYnJlYWNoIG9mIHRoaXMgQWdyZWVtZW50IGFu
ZC9vciBhbnkgYnJlYWNoIG9mIHlvdXIgcmVwcmVzZW50YXRpb25zIGFuZCB3YXJyYW50aWVzIHNldCBm
b3J0aCBpbiB0aGlzIEFncmVlbWVudCBhbmQvb3IgYW55IENvbnRlbnQgdGhhdCB5b3UgcG9zdCBvbiBv
ciB0aHJvdWdoIHRoZSBhTGF0dGUgU2VydmljZXMuDQoNCiAgICAxNy4gT3RoZXIuIFRoaXMgQWdyZWVt
ZW50IGlzIGFjY2VwdGVkIHVwb24geW91ciB1c2Ugb2YgdGhlIGFMYXR0ZSBXZWJzaXRlIG9yIGFueSBv
ZiB0aGUgYUxhdHRlIFNlcnZpY2VzIGFuZCBpcyBmdXJ0aGVyIGFmZmlybWVkIGJ5IHlvdSBiZWNvbWlu
ZyBhIE1lbWJlci4gVGhpcyBBZ3JlZW1lbnQgY29uc3RpdHV0ZXMgdGhlIGVudGlyZSBhZ3JlZW1lbnQg
YmV0d2VlbiB5b3UgYW5kIGFMYXR0ZSByZWdhcmRpbmcgdGhlIHVzZSBvZiB0aGUgYUxhdHRlIFNlcnZp
Y2VzLiBUaGUgZmFpbHVyZSBvZiBhTGF0dGUgdG8gZXhlcmNpc2Ugb3IgZW5mb3JjZSBhbnkgcmlnaHQg
b3IgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50IHNoYWxsIG5vdCBvcGVyYXRlIGFzIGEgd2FpdmVy
IG9mIHN1Y2ggcmlnaHQgb3IgcHJvdmlzaW9uLiBUaGUgc2VjdGlvbiB0aXRsZXMgaW4gdGhpcyBBZ3Jl
ZW1lbnQgYXJlIGZvciBjb252ZW5pZW5jZSBvbmx5IGFuZCBoYXZlIG5vIGxlZ2FsIG9yIGNvbnRyYWN0
dWFsIGVmZmVjdC4gYUxhdHRlIGlzIGEgdHJhZGVtYXJrIG9mIGFMYXR0ZSwgSW5jLiBUaGlzIEFncmVl
bWVudCBvcGVyYXRlcyB0byB0aGUgZnVsbGVzdCBleHRlbnQgcGVybWlzc2libGUgYnkgbGF3LiBJZiBh
bnkgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50IGlzIHVubGF3ZnVsLCB2b2lkIG9yIHVuZW5mb3Jj
ZWFibGUsIHRoYXQgcHJvdmlzaW9uIGlzIGRlZW1lZCBzZXZlcmFibGUgZnJvbSB0aGlzIEFncmVlbWVu
dCBhbmQgZG9lcyBub3QgYWZmZWN0IHRoZSB2YWxpZGl0eSBhbmQgZW5mb3JjZWFiaWxpdHkgb2YgYW55
IHJlbWFpbmluZyBwcm92aXNpb25zLg0KDQpQbGVhc2UgY29udGFjdCB1cyBhdCBzdXBwb3J0QGFsYXR0
ZWFwcC5jb20gd2l0aCBhbnkgcXVlc3Rpb25zIHJlZ2FyZGluZyB0aGlzIEFncmVlbWVudC4NCg0KSSBI
QVZFIFJFQUQgVEhJUyBBR1JFRU1FTlQgQU5EIEFHUkVFIFRPIEFMTCBPRiBUSEUgUFJPVklTSU9OUyBD
T05UQUlORUQgQUJPVkUuIEkgVU5ERVJTVEFORCBUSEFUIGFMYXR0ZSBET0VTIE5PVCBDT05EVUNUIENS
SU1JTkFMIEJBQ0tHUk9VTkQgQ0hFQ0tTIE9OIElUUyBNRU1CRVJTLiANCg0KA</bytes>
								</object>
								<object class="IBUITextInputTraits" key="IBUITextInputTraits">
									<int key="IBUIAutocapitalizationType">2</int>
									<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
								</object>
								<object class="IBUIFontDescription" key="IBUIFontDescription">
									<int key="type">1</int>
									<double key="pointSize">10</double>
								</object>
								<object class="NSFont" key="IBUIFont">
									<string key="NSName">Helvetica</string>
									<double key="NSSize">10</double>
									<int key="NSfFlags">16</int>
								</object>
							</object>
						</array>
						<string key="NSFrameSize">{326, 460}</string>
						<reference key="NSSuperview" ref="191373211"/>
						<reference key="NSWindow"/>
						<reference key="NSNextKeyView" ref="887291499"/>
						<string key="NSReuseIdentifierKey">_NS:9</string>
						<bool key="IBUIClipsSubviews">YES</bool>
						<bool key="IBUIMultipleTouchEnabled">YES</bool>
						<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
					</object>
				</array>
				<string key="NSFrame">{{0, 20}, {320, 460}}</string>
				<reference key="NSSuperview"/>
				<reference key="NSWindow"/>
				<reference key="NSNextKeyView" ref="179134965"/>
				<object class="NSColor" key="IBUIBackgroundColor">
					<int key="NSColorSpace">3</int>
					<bytes key="NSWhite">MQA</bytes>
					<object class="NSColorSpace" key="NSCustomColorSpace">
						<int key="NSID">2</int>
					</object>
				</object>
				<object class="IBUISimulatedStatusBarMetrics" key="IBUISimulatedStatusBarMetrics"/>
				<string key="targetRuntimeIdentifier">IBCocoaTouchFramework</string>
			</object>
		</array>
		<object class="IBObjectContainer" key="IBDocument.Objects">
			<array class="NSMutableArray" key="connectionRecords">
				<object class="IBConnectionRecord">
					<object class="IBCocoaTouchOutletConnection" key="connection">
						<string key="label">view</string>
						<reference key="source" ref="372490531"/>
						<reference key="destination" ref="191373211"/>
					</object>
					<int key="connectionID">3</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBCocoaTouchOutletConnection" key="connection">
						<string key="label">content</string>
						<reference key="source" ref="372490531"/>
						<reference key="destination" ref="887291499"/>
					</object>
					<int key="connectionID">13</int>
				</object>
			</array>
			<object class="IBMutableOrderedSet" key="objectRecords">
				<array key="orderedObjects">
					<object class="IBObjectRecord">
						<int key="objectID">0</int>
						<array key="object" id="0"/>
						<reference key="children" ref="1000"/>
						<nil key="parent"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">1</int>
						<reference key="object" ref="191373211"/>
						<array class="NSMutableArray" key="children">
							<reference ref="179134965"/>
						</array>
						<reference key="parent" ref="0"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">-1</int>
						<reference key="object" ref="372490531"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">File's Owner</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">-2</int>
						<reference key="object" ref="975951072"/>
						<reference key="parent" ref="0"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">8</int>
						<reference key="object" ref="179134965"/>
						<array class="NSMutableArray" key="children">
							<reference ref="887291499"/>
						</array>
						<reference key="parent" ref="191373211"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">12</int>
						<reference key="object" ref="887291499"/>
						<reference key="parent" ref="179134965"/>
					</object>
				</array>
			</object>
			<dictionary class="NSMutableDictionary" key="flattenedProperties">
				<string key="-1.CustomClassName">TermsController</string>
				<string key="-1.IBPluginDependency">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
				<string key="-2.CustomClassName">UIResponder</string>
				<string key="-2.IBPluginDependency">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
				<string key="1.IBPluginDependency">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
				<string key="12.IBPluginDependency">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
				<string key="8.IBPluginDependency">com.apple.InterfaceBuilder.IBCocoaTouchPlugin</string>
			</dictionary>
			<dictionary class="NSMutableDictionary" key="unlocalizedProperties"/>
			<nil key="activeLocalization"/>
			<dictionary class="NSMutableDictionary" key="localizations"/>
			<nil key="sourceID"/>
			<int key="maxID">13</int>
		</object>
		<object class="IBClassDescriber" key="IBDocument.Classes">
			<array class="NSMutableArray" key="referencedPartialClassDescriptions">
				<object class="IBPartialClassDescription">
					<string key="className">TermsController</string>
					<string key="superclassName">UIViewController</string>
					<object class="NSMutableDictionary" key="outlets">
						<string key="NS.key.0">content</string>
						<string key="NS.object.0">UITextView</string>
					</object>
					<object class="NSMutableDictionary" key="toOneOutletInfosByName">
						<string key="NS.key.0">content</string>
						<object class="IBToOneOutletInfo" key="NS.object.0">
							<string key="name">content</string>
							<string key="candidateClassName">UITextView</string>
						</object>
					</object>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBProjectSource</string>
						<string key="minorKey">./Classes/TermsController.h</string>
					</object>
				</object>
			</array>
		</object>
		<int key="IBDocument.localizationMode">0</int>
		<string key="IBDocument.TargetRuntimeIdentifier">IBCocoaTouchFramework</string>
		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencyDefaults">
			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaTouchPlugin.iPhoneOS</string>
			<real value="1296" key="NS.object.0"/>
		</object>
		<bool key="IBDocument.PluginDeclaredDependenciesTrackSystemTargetVersion">YES</bool>
		<int key="IBDocument.defaultPropertyAccessControl">3</int>
		<string key="IBCocoaTouchPluginVersion">1181</string>
	</data>
</archive>
